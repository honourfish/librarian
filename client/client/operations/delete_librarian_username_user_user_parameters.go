// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteLibrarianUsernameUserUserParams creates a new DeleteLibrarianUsernameUserUserParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteLibrarianUsernameUserUserParams() *DeleteLibrarianUsernameUserUserParams {
	return &DeleteLibrarianUsernameUserUserParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteLibrarianUsernameUserUserParamsWithTimeout creates a new DeleteLibrarianUsernameUserUserParams object
// with the ability to set a timeout on a request.
func NewDeleteLibrarianUsernameUserUserParamsWithTimeout(timeout time.Duration) *DeleteLibrarianUsernameUserUserParams {
	return &DeleteLibrarianUsernameUserUserParams{
		timeout: timeout,
	}
}

// NewDeleteLibrarianUsernameUserUserParamsWithContext creates a new DeleteLibrarianUsernameUserUserParams object
// with the ability to set a context for a request.
func NewDeleteLibrarianUsernameUserUserParamsWithContext(ctx context.Context) *DeleteLibrarianUsernameUserUserParams {
	return &DeleteLibrarianUsernameUserUserParams{
		Context: ctx,
	}
}

// NewDeleteLibrarianUsernameUserUserParamsWithHTTPClient creates a new DeleteLibrarianUsernameUserUserParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteLibrarianUsernameUserUserParamsWithHTTPClient(client *http.Client) *DeleteLibrarianUsernameUserUserParams {
	return &DeleteLibrarianUsernameUserUserParams{
		HTTPClient: client,
	}
}

/* DeleteLibrarianUsernameUserUserParams contains all the parameters to send to the API endpoint
   for the delete librarian username user user operation.

   Typically these are written to a http.Request.
*/
type DeleteLibrarianUsernameUserUserParams struct {

	// User.
	User string

	// Username.
	Username string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete librarian username user user params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteLibrarianUsernameUserUserParams) WithDefaults() *DeleteLibrarianUsernameUserUserParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete librarian username user user params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteLibrarianUsernameUserUserParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete librarian username user user params
func (o *DeleteLibrarianUsernameUserUserParams) WithTimeout(timeout time.Duration) *DeleteLibrarianUsernameUserUserParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete librarian username user user params
func (o *DeleteLibrarianUsernameUserUserParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete librarian username user user params
func (o *DeleteLibrarianUsernameUserUserParams) WithContext(ctx context.Context) *DeleteLibrarianUsernameUserUserParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete librarian username user user params
func (o *DeleteLibrarianUsernameUserUserParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete librarian username user user params
func (o *DeleteLibrarianUsernameUserUserParams) WithHTTPClient(client *http.Client) *DeleteLibrarianUsernameUserUserParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete librarian username user user params
func (o *DeleteLibrarianUsernameUserUserParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithUser adds the user to the delete librarian username user user params
func (o *DeleteLibrarianUsernameUserUserParams) WithUser(user string) *DeleteLibrarianUsernameUserUserParams {
	o.SetUser(user)
	return o
}

// SetUser adds the user to the delete librarian username user user params
func (o *DeleteLibrarianUsernameUserUserParams) SetUser(user string) {
	o.User = user
}

// WithUsername adds the username to the delete librarian username user user params
func (o *DeleteLibrarianUsernameUserUserParams) WithUsername(username string) *DeleteLibrarianUsernameUserUserParams {
	o.SetUsername(username)
	return o
}

// SetUsername adds the username to the delete librarian username user user params
func (o *DeleteLibrarianUsernameUserUserParams) SetUsername(username string) {
	o.Username = username
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteLibrarianUsernameUserUserParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param user
	if err := r.SetPathParam("user", o.User); err != nil {
		return err
	}

	// path param username
	if err := r.SetPathParam("username", o.Username); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
